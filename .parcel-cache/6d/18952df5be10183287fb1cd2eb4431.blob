"use strict";

var _CanvasView = require("./view/CanvasView");

var _Paddle = require("./sprites/Paddle");

var _paddle = _interopRequireDefault(require("url:./images/paddle.png"));

var _setup = require("./setup");

var _helpers = require("./helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Images
// 
// Helpers
let gameOver = false;
let score = 0;

function setGameOver(view) {
  view.drawInfo('Game Over!');
  gameOver = false;
}

function setGameWin(view) {
  view.drawInfo('Game Won!');
  gameOver = false;
}

function gameLoop(view, bricks, paddle, ball) {
  view.clear();
  view.drawBricks(bricks);
  view.drawSprite(paddle); // Move paddle and check so it won't exit the playfield

  if (paddle.isMovingLeft && paddle.pos.x > 0 || paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width) {
    paddle.movePaddle();
  }

  requestAnimationFrame(() => gameLoop(view, bricks, paddle));
}

function startGame(view) {
  // Reset display
  score = 0;
  view.drawInfo('');
  view.drawScore(0); // Create all bricks

  const bricks = (0, _helpers.createBricks)(); // Create 
  // Create paddle

  const paddle = new _Paddle.Paddle(_setup.PADDLE_SPEED, _setup.PADDLE_WIDTH, _setup.PADDLE_HEIGHT, {
    x: _setup.PADDLE_STARTX,
    y: view.canvas.height - _setup.PADDLE_HEIGHT - 5
  }, _paddle.default);
  gameLoop(view, bricks, paddle);
} // Create a new view


const view = new _CanvasView.CanvasView('#playField');
view.initStartButton(startGame);